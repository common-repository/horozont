<?php
/*
Plugin Name: Horozont
Plugin URI: https://wordpress.org/plugins/horozont/
Description: –ü–ª–∞–≥–∏–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.
Version: 1.0
Author: Trigur
License: GPLv2 or later
*/
/*
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/

include dirname( __FILE__ ) . '/functions.php';

class Horozont
{
    const OPTION_KEY_DATA = 'wp-horozont-data';
    const OPTION_KEY_DATE_UPDATE = 'wp-horozont-dateUpdate';

    protected $types = [       // –¢–∏–ø—ã –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤
        'com'   =>  '–û–±—â–∏–π',
        'ero'   =>  '–≠—Ä–æ—Ç–∏—á–µ—Å–∫–∏–π',
        'anti'  =>  '–ê–Ω—Ç–∏–≥–æ—Ä–æ—Å–∫–æ–ø',
        'bus'   =>  '–ë–∏–∑–Ω–µ—Å',
        'hea'   =>  '–ó–¥–æ—Ä–æ–≤—å–µ',
        'cook'  =>  '–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π',
        'lov'   =>  '–õ—é–±–æ–≤–Ω—ã–π',
        'mob'   =>  '–ú–æ–±–∏–ª—å–Ω—ã–π',
    ];

    protected $marks = [       // –ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞
        'aries'       => '–û–≤–µ–Ω',
        'taurus'      => '–¢–µ–ª–µ—Ü',
        'gemini'      => '–ë–ª–∏–∑–Ω–µ—Ü—ã',
        'cancer'      => '–†–∞–∫',
        'leo'         => '–õ–µ–≤',
        'virgo'       => '–î–µ–≤–∞',
        'libra'       => '–í–µ—Å—ã',
        'scorpio'     => '–°–∫–æ—Ä–ø–∏–æ–Ω',
        'sagittarius' => '–°—Ç—Ä–µ–ª–µ—Ü',
        'capricorn'   => '–ö–æ–∑–µ—Ä–æ–≥',
        'aquarius'    => '–í–æ–¥–æ–ª–µ–π',
        'pisces'      => '–†—ã–±—ã',
    ];

    protected $days = [
        'today'      => '–°–µ–≥–æ–¥–Ω—è',
        'tomorrow'   => '–ó–∞–≤—Ç—Ä–∞',
        'yesterday'  => '–í—á–µ—Ä–∞',
    ];

    protected $dayShift = [
        'yesterday'  => 'today',
        'today'      => 'tomorrow',
        'tomorrow'   => 'tomorrow02',
    ];

    protected $dateUpdate;  // –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    protected $data;        // –î–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ—Å–æ–∫–æ–ø–æ–≤

    public function __construct()
    {
        add_shortcode('horozont', [$this, 'shortcodeHoroscope']);
        add_action('admin_menu', [$this, 'menuPluginHoroscope']);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–∞–π—Ç–µ. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏.
     * @return array  –¥–∞–Ω–Ω—ã–µ
     */
    protected function getData()
    {
        if ($this->data) {
            return $this->data;
        }

        $this->dateUpdate = (int) get_option(static::OPTION_KEY_DATE_UPDATE);

        if (!$this->dateUpdate || strtotime(date('Y-m-d')) > $this->dateUpdate) {
            $this->updateData();
        }
        else {
            $this->data = get_option(static::OPTION_KEY_DATA);

            if (! $this->data) {
                $this->updateData();
            }
            else {
                $this->data = json_decode($this->data, true);
            }
        }

        return $this->data;
    }

    /**
     * –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—É—Ç—ë–º cURL
     * @param  string $url –°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
     * @return string      HTML –∫–æ–¥ –ø–æ–ª—É—á–µ–Ω–æ–π —Å—Ç–∞—Ä–∏–Ω—Ü—ã
     */
    protected function getPageCode($url)
    {
        $wpHttp = new WP_Http();
        $result = $wpHttp->get($url, ['timeout' => 10]);
        return $result['body'];
    }

    /**
     * –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –¥–∞—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∞ d.m.Y –∫ timestamp
     * @param  string –î–∞—Ç–∞
     * @return int    timestamp
     */
    protected function dateToString($date)
    {
        $date = explode('.', $date);
        $date = array_reverse($date);
        $date = join('-', $date);

        return strtotime($date);
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç url xml-–∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏
     * @param  string $url –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Ç–æ–∫ XML
     * @return array       –î–∞–Ω–Ω—ã–µ –∏–∑ XML
     */
    protected function parseXML($url)
    {
        $pageCode = $this->getPageCode($url);
        $pageCode = str_replace(array("\n", "\r", "\t"), '', $pageCode);
        $pageCode = trim(str_replace('"', "'", $pageCode));

        $xml      = simplexml_load_string($pageCode);

        return json_decode(json_encode($xml), true);
    }

    /**
     * –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–π —Ç–∏–ø–æ–≤ –ø–æ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è–º
     * @param  array  $array  –ú–∞—Å—Å–∏–≤ —Ç–∏–ø–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞
     * @param  string $search –°—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞
     * @return string         –ö–ª—é—á —Ç–∏–ø–∞
     */
    protected function findInTypes($array, $search)
    {
        $searchString = mb_strtolower($search, 'utf8');

        foreach ($array as $id => $name) {
            $needType = mb_strtolower($name, 'utf8');

            if (stristr($searchString, $needType)) {
                return $id;
            }
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø –ø–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É —Ç–∏–ø—É
     * @param  string $type –ò–¥–µ—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–∏–ø–∞
     * @return array        –ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ—Å–∫–æ–ø–∞
     */
    protected function getHoroscope($type)
    {
        $currentHoroscope = $this->parseXML(
            'http://img.ignio.com/r/export/utf/xml/daily/' . $type . '.xml'
        );

        $resultData = [];
        foreach ($this->marks as $key => $data) {
            $resultData[$key] = $currentHoroscope[$key];
        }

        return [
            'dates' => $currentHoroscope['date']['@attributes'],
            'data'  => $resultData
        ];
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –≥–æ—Ä–æ—Å–∫–æ–ø—ã
     * @return array –ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ—Å–∫–æ–ø–∞
     */
    protected function getHoroscopeAll()
    {
        $resultData = array();

        foreach ($this->types as $id => $name) {
            $resultData[$id] = $this->getHoroscope($id);
        }

        return $resultData;
    }
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–µ—à–∞ –¥–∞–Ω–Ω—ã—Ö
     * @return null
     */
    protected function updateData()
    {
        $this->dateUpdate = strtotime(date('Y-m-d'));
        $this->data = $this->getHoroscopeAll();
        update_option(static::OPTION_KEY_DATE_UPDATE, $this->dateUpdate);
        update_option(static::OPTION_KEY_DATA, json_encode($this->data));
    }

    protected function shiftDay($day)
    {
        return $this->dayShift[$day];
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —à–æ—Ä—Ç–∫–æ–¥–∞
     * @param  array $atts –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —à–æ—Ä—Ç–∫–æ–¥–∞
     * @return html        HTML –∫–æ–¥ —à–æ—Ä—Ç–∫–æ–¥–∞
     */
    public function shortcodeHoroscope($atts)
    {
        extract(shortcode_atts(array(
            'type' => '–û–±—â–∏–π',
            'mark' => '–û–≤–µ–Ω',
            'day' => 'today'
        ), $atts));

        $type = $this->findInTypes($this->types, $type);
        $mark = $this->findInTypes($this->marks, $mark);
        $day  = $this->findInTypes($this->days, $day);

        if (! ($type && $mark && $day)) {
            return '';
        }

        $data = $this->getData();

        $dateCheck = $this->dateToString($data[$type]['dates']['today']);

        if ($dateCheck !== $this->dateUpdate) {
            $day = $this->shiftDay($day);
        }

        return $data[$type]['data'][$mark][$day];
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ–º –ø—É–Ω–∫—Ç—ã –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
     * @return null
     */
    public function menuPluginHoroscope()
    {
        add_submenu_page(
            'options-general.php',
            '–ì–æ—Ä–æ—Å–∫–æ–ø',
            '–ì–æ—Ä–æ—Å–∫–æ–ø',
            'manage_options',
            'horozont',
            [$this, 'indexPageHoroscope']
        );
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è html options –∏–∑ –º–∞—Å—Å–∏–≤–∞
     * @param  array $arr –ú–∞—Å—Å–∏–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
     * @return string
     */
    protected function makeOptionsHTML($arr)
    {
        $arr = array_map(function($item) {
            return '<option value="' . $item . '">' . $item . '</option>';
        }, $arr);

        return join('', $arr);
    }

    /**
     * –í—ã–≤–æ–¥–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–µ
     * @return html HTML –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    public function indexPageHoroscope()
    {
        if (! current_user_can('manage_options')) {
            wp_die(__('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.'));
        }
        ?>
        <div class="wrap">
            <h2 style="text-align:center;width: 574px;">
                –ü–ª–∞–≥–∏–Ω WP Russian Horozont by Trigur
            </h2>

            <div class="card">
                <h3>
                    –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ
                </h3>

                <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –∏–º–µ–Ω–Ω–æ –º–æ–π –ø–ª–∞–≥–∏–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤ —É —Å–µ–±—è –Ω–∞ —Å–∞–π—Ç–µ. –ï—Å–ª–∏ –≤—ã –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É —Ü–µ–Ω–∏—Ç–µ –º–æ–π —Ç—Ä—É–¥, —Ç–æ –ø–æ–∂–µ—Ä—Ç–≤—É–π—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é —Å—É–º–º—É –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–ª –∏ –¥–∞–ª—å—à–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —ç—Ç–æ–≥–æ –ø–ª–∞–≥–∏–Ω–∞. –°–ø–∞—Å–∏–±–æ üòä</p>

                <a href="https://money.yandex.ru/to/410014425162959" target="_blank">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</a>
            </div>

            <div class="card">
                <h3>–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è <span style="float:right">–ì–æ—Ä–æ—Å–∫–æ–ø –æ—Ç: <?php echo date('d.m.Y', get_option('wp-horozont-dateUpdate')); ?></span></h3>
                <p>–î–∞–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≥–æ—Ä–æ—Å–∫–æ–ø –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º. –ö–æ—Ç–æ—Ä—ã–µ –≤—ã –º–æ–∂–µ—Ç–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—ã–≤–æ–¥–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —à–æ—Ä—Ç–∫–æ–¥–µ.</p>
                <h3>–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —à–æ—Ä—Ç–∫–æ–¥–æ–≤</h3>
                <p><code>[horozont type="%TYPE%" mark="%MARK%"]</code><br><br>
                    <b>%TYPE%</b> - –¢–∏–ø –≥–æ—Ä–æ—Å–∫–æ–ø–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: <i>–õ—é–±–æ–≤–Ω—ã–π</i> <br>
                    <b>%MARK%</b> - –ó–Ω–∞–∫ –≥–æ—Ä–æ—Å–∫–æ–ø–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: <i>–ë–∏–∑–Ω–µ—Ü—ã</i> <br>
                    <b>%DAY%</b> - –î–µ–Ω—å. –ù–∞–ø—Ä–∏–º–µ—Ä: <i>–°–µ–≥–æ–¥–Ω—è</i>
                </p>
                <h3>–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —à–æ—Ä—Ç–∫–æ–¥–æ–≤</h3>
                <div style="text-align:center">
                    <select class="postform" id="type" onchange="generateCode()">
                        <?= $this->makeOptionsHTML($this->types); ?>
                    </select>

                    <select class="postform" id="mark" onchange="generateCode()">
                        <?= $this->makeOptionsHTML($this->marks); ?>
                    </select>

                    <select class="postform" id="day" onchange="generateCode()">
                        <?= $this->makeOptionsHTML($this->days); ?>
                    </select>
                    <br>
                    <p id="code" style="padding-top:5px;">
                        <code>[horozont type="–û–±—â–∏–π" mark="–û–≤–µ–Ω" day="–°–µ–≥–æ–¥–Ω—è"]</code>
                    </p>
                </div>
            </div>

            <div class="card">
                <h3>–ò—Å—Ç–æ—á–Ω–∏–∫ –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤</h3>
                <a href="http://img.ignio.com/static/r/public/export/" target="_blank">
                    –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                </a>

                <br>

                <h3>–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—é –ø–ª–∞–≥–∏–Ω–∞</h3>
                Email: <a href="mailto:trigur@yandex.ru">trigur@yandex.ru</a>
            </div>
        </div>

        <script>
            function getValue(id) {
                var element = document.getElementById(id);

                return element.options[element.selectedIndex].text;
            }

            function generateCode() {
                document.getElementById("code")
                    .innerHTML = "<code>[horozont type=\"" + getValue('type') +
                        "\" mark=\"" + getValue('mark') +
                        "\" day=\"" + getValue('day') +
                        "\"]</code>";
            }
        </script>
        <?php
    }
}

$horozont = new Horozont;